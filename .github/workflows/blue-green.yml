name: Blue-Green Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        clean: false

    - name: Initialize current version
      run: |
        if [ ! -f current_version ]; then
          echo "blue" > current_version
        fi

    - name: Debug file paths
      run: |
        ls -l
        ls -l blue/
        ls -l green/

    - name: Debug green folder
      run: |
        WORKSPACE=${{ github.workspace }}
        echo "Contents of green folder:"
        ls -l ${WORKSPACE}/green || echo "Green folder is not accessible"

    - name: Set deployment target
      id: set-target
      run: |
        echo "Reading current version..."
        if [ -f current_version ]; then
          CURRENT=$(cat current_version)
        else
          echo "current_version file not found! Defaulting to 'blue'."
          CURRENT="blue"
        fi
        echo "Current version: $CURRENT"

        # Определяем новую версию
        if [ "$CURRENT" = "blue" ]; then
          NEW_VERSION="green"
        else
          NEW_VERSION="blue"
        fi

        echo "New version: $NEW_VERSION"

        # Сохраняем переменные в GITHUB_ENV
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
        echo "CURRENT=$CURRENT" >> $GITHUB_ENV

    - name: Deploy new version
      run: |
        NEW_VERSION=${{ env.NEW_VERSION }}
        WORKSPACE=${{ github.workspace }}

        echo "Deploying new version: $NEW_VERSION"
        cd ${WORKSPACE}

        # Проверяем, что файл index.html в папке существует
        if [ -f "${WORKSPACE}/${NEW_VERSION}/index.html" ]; then
          echo "File index.html exists in ${NEW_VERSION}."
          ls -l ${WORKSPACE}/${NEW_VERSION}/index.html
        else
          echo "File index.html does not exist in ${NEW_VERSION}!"
          exit 1
        fi

        # Удаляем старый index.html из корня
        echo "Removing old index.html from root..."
        rm -f ${WORKSPACE}/index.html

        # Копируем index.html из новой версии в корень
        echo "Copying new index.html to root..."
        cp ${WORKSPACE}/${NEW_VERSION}/index.html ${WORKSPACE}/index.html

        # Проверяем содержимое корня
        echo "Contents of root after copying:"
        ls -l ${WORKSPACE}/index.html

        # Обновляем файл current_version
        echo "Updating current_version to $NEW_VERSION..."
        echo $NEW_VERSION | tee ${WORKSPACE}/current_version
        cat ${WORKSPACE}/current_version

    - name: Save current version
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        
        # Проверяем и коммитим локальные изменения, если они есть
        if [ -n "$(git status --porcelain)" ]; then
          echo "Committing local changes before pulling..."
          git add .  # Добавляем все изменения, включая untracked файлы
          git commit -m "Pre-pull commit for current_version"
        fi

        # Подтягиваем изменения из удалённой ветки
        git pull origin main --rebase || exit 0  # Не завершаем ошибкой, если нет новых изменений

        # Проверяем, нужно ли пушить изменения
        if [ -n "$(git status --porcelain)" ]; then
          echo "Pushing changes to origin/main..."
          git push origin main
        else
          echo "No changes to push. Exiting..."
        fi

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./
