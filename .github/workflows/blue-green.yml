name: Blue-Green Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        clean: false  # Отключает очистку рабочей директории

    - name: Initialize current version
      run: |
        if [ ! -f current_version ]; then
          echo "blue" > current_version
        fi

    - name: Debug file paths
      run: |
        ls -l
        ls -l blue/
        ls -l green/

    - name: Debug green folder
      run: |
        WORKSPACE=${{ github.workspace }}
        echo "Contents of green folder:"
        ls -l ${WORKSPACE}/green || echo "Green folder is not accessible"

    - name: Set deployment target
      id: set-target
      run: |
        CURRENT=$(cat current_version)
        if [ "$CURRENT" = "blue" ]; then
          echo "NEW_VERSION=green" >> $GITHUB_ENV
        else
          echo "NEW_VERSION=blue" >> $GITHUB_ENV
        fi
        echo "Current version: $CURRENT"
        echo "New version: ${{ env.NEW_VERSION }}"

    - name: Deploy new version
      run: |
        NEW_VERSION=${{ env.NEW_VERSION }}
        WORKSPACE=${{ github.workspace }}

        cd ${WORKSPACE}

        # Проверяем, что файл index.html в папке существует
        if [ -f "${WORKSPACE}/${NEW_VERSION}/index.html" ]; then
          echo "File index.html exists in ${NEW_VERSION}."
          ls -l ${WORKSPACE}/${NEW_VERSION}/index.html
        else
          echo "File index.html does not exist in ${NEW_VERSION}!"
          exit 1
        fi

        # Удаляем старый index.html из корня
        rm -f ${WORKSPACE}/index.html

        # Копируем index.html из новой версии в корень
        cp ${WORKSPACE}/${NEW_VERSION}/index.html ${WORKSPACE}/index.html

        # Обновляем файл текущей версии
        echo $NEW_VERSION > current_version

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./
