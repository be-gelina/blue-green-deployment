name: Blue-Green Deployment

on:
  workflow_dispatch:  # Позволяет вручную запускать workflow
  push:
    branches:
      - main  # Запускается при пуше в ветку main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Initialize current version
      run: |
        # Проверяем, существует ли файл current_version, если нет, создаём его
        if [ ! -f current_version ]; then
          echo "blue" > current_version
        fi

    - name: Debug file paths
      run: |
        ls -l  # Смотрим, что в корне репозитория
        ls -l blue/  # Проверяем содержимое папки blue
        ls -l green/  # Проверяем содержимое папки green

    - name: Set deployment target
      id: set-target
      run: |
        # Определяем текущую версию
        CURRENT=$(cat current_version)
        if [ "$CURRENT" = "blue" ]; then
          echo "NEW_VERSION=green" >> $GITHUB_ENV
        else
          echo "NEW_VERSION=blue" >> $GITHUB_ENV
        fi
        echo "Current version: $CURRENT"
        echo "New version: ${{ env.NEW_VERSION }}"

    - name: Debug deployment target
      run: |
        echo "Current version from file: $(cat current_version)"
        echo "New version: ${{ env.NEW_VERSION }}"

    - name: Deploy new version
      run: |
        NEW_VERSION=${{ env.NEW_VERSION }}
        WORKSPACE=${{ github.workspace }}

        # Удаляем старые файлы из корня
        rm -rf ${WORKSPACE}/*

        # Проверяем содержимое папки и копируем файлы
        if [ -d "${WORKSPACE}/${NEW_VERSION}" ] && [ "$(ls -A ${WORKSPACE}/${NEW_VERSION})" ]; then
          cp -r ${WORKSPACE}/${NEW_VERSION}/* ${WORKSPACE}/
          echo $NEW_VERSION > ${WORKSPACE}/current_version
        else
          echo "Error: Directory ${NEW_VERSION} is empty or does not exist!" >&2
          ls -l ${WORKSPACE}/${NEW_VERSION} || true
          exit 1
        fi

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./  # Публикуем содержимое корня
